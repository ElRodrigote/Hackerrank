import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int grid[][] = new int[n][m];
        for(int grid_i=0; grid_i < n; grid_i++){
            for(int grid_j=0; grid_j < m; grid_j++){
                grid[grid_i][grid_j] = in.nextInt();
            }
        }
        System.out.println(maxRegion(grid));
    }
    
    public static int maxRegion(int[][] A){
        int max = 0;
        for (int i = 0; i < A.length; i++){
            for (int j = 0; j < A[0].length; j++){
                max = Math.max(max, getRegion(A, i, j));
            }
        }
        return max;
    }
    
    private static int getRegion(int[][] A, int i, int j){
        if (i < 0 || j < 0 || i >= A.length || j >= A[0].length){
            return 0;
        }
        
        if (A[i][j] == 0){
            return 0;
        }
        
        int acum = A[i][j]--;
        
        acum += getRegion(A, i + 1, j);
        acum += getRegion(A, i - 1, j);
        acum += getRegion(A, i, j + 1);
        acum += getRegion(A, i, j - 1);
        acum += getRegion(A, i + 1, j + 1);
        acum += getRegion(A, i - 1, j - 1);
        acum += getRegion(A, i - 1, j + 1);
        acum += getRegion(A, i + 1, j - 1);
        
        return acum;
    }
}
